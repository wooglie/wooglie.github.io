{"version":3,"sources":["pages/Home/timeline-hrv-dizajna.png","pages/Home/steady.png","pages/Home/person.jpg","pages/RandomPersonGenerator/person.jpg","components/card/index.js","pages/Home/index.js","components/button/index.js","pages/RandomPersonGenerator/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","_this$props","this","props","onClick","img","title","text","react_default","a","createElement","className","src","Component","Home","_ref","history","card","imgRndPerson","push","imgSteady","window","open","imgTimelineHrvDizajna","Button","float","style","type","RandomPersonGenerator","state","osoba","datumRodenja","dob","email","fakultet","ime","krsnoIme","kucniBroj","mjesto","mobitel","nadimak","prezime","skola","spol","srednjeIme","struka","studiji","telefon","ulica","zupanija","getUser","fetch","then","res","json","_this","setState","_this2","O","imgPerson","alt","components_button","go","App","BrowserRouter","Route","exact","path","component","render","pages_RandomPersonGenerator","href","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4935f37b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/timeline-hrv-dizajna.ae489230.png\";","module.exports = __webpack_public_path__ + \"static/media/steady.eb93afc0.png\";","module.exports = __webpack_public_path__ + \"static/media/person.1d405a31.jpg\";","module.exports = __webpack_public_path__ + \"static/media/person.1d405a31.jpg\";","import React, { Component } from 'react';\nimport './style.css';\n\nclass Card extends Component {\n    render() {\n        const { onClick, img, title, text } = this.props\n        return (\n            <div className=\"card\" onClick={onClick}>\n                <div className=\"card-header\">\n                    {img ? (<img src={img} />) : null}</div>\n                <div className=\"card-body \">\n                    {title ? (<h5 className=\"card-title\">{title}</h5>) : null}\n                    {text ? (<h6 className=\"card-text\">{text}</h6>) : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import React from 'react'\nimport Card from '../../components/card'\n\nimport imgTimelineHrvDizajna from './timeline-hrv-dizajna.png'\nimport imgSteady from './steady.png'\nimport imgRndPerson from './person.jpg'\n\nexport default function Home({ history }) {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Card\n                    img={imgRndPerson}\n                    title=\"Random Person\"\n                    text=\"Generiraj random osobu is hrvatske\"\n                    onClick={() => { history.push(\"/RandomPersonGenerator\") }} />\n\n                <Card\n                    img={imgSteady}\n                    title=\"Steady\"\n                    text=\"Beskonačna igra za kidanje živaca\"\n                    onClick={() => { window.open('https://play.google.com/store/apps/details?id=org.wooglies.steady', '_blank'); }} />\n\n\n                <Card\n                    img={imgTimelineHrvDizajna}\n                    title=\"Timeline Hrvarskog Dizajna\"\n                    text=\"Povijest dizajna od 1945. do danas\"\n                    onClick={() => { window.open('http://timelinehrvatskogdizajna.com/', '_blank'); }} />\n\n            </div>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport './style.css';\n\nclass Button extends Component {\n    render() {\n        const { onClick, text, className, float } = this.props\n        return (\n            <button onClick={onClick} style={{ float }} type=\"button\" className={\"btn btn-\" + className}>{text}</button>\n        );\n    }\n}\n\nexport default Button;\n","import React, { Component } from 'react'\nimport Button from '../../components/button'\n\nimport imgPerson from './person.jpg'\nimport './style.css'\n\nclass RandomPersonGenerator extends Component {\n\n    state = {\n        osoba: {\n            datumRodenja: \"\",\n            dob: \"\",\n            email: \"\",\n            fakultet: \"\",\n            ime: \"\",\n            krsnoIme: \"\",\n            kucniBroj: \"\",\n            mjesto: \"\",\n            mobitel: \"\",\n            nadimak: \"\",\n            prezime: \"\",\n            skola: \"\",\n            spol: \"\",\n            srednjeIme: \"\",\n            struka: \"\",\n            studiji: \"\",\n            telefon: \"\",\n            ulica: \"\",\n            zupanija: \"\"\n        }\n    }\n\n    getUser = () => {\n        fetch(\"https://wooglie.org:8080\").then(res => res.json())\n            .then((osoba) => {\n                this.setState({ osoba })\n            })\n    }\n\n    componentDidMount() {\n        this.getUser();\n    }\n\n    render() {\n\n        const O = this.state.osoba;\n\n        return (\n            <div className=\"container randomPersonGenerator\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"card\">\n                            <img className=\"card-img-top\" src={imgPerson} alt=\"Card image cap\" />\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">{O.ime + \" \" + O.prezime}</h5>\n                                <table className=\"table table-dark table-striped\">\n                                    <tbody>\n                                        <tr>\n                                            <td>Ime</td>\n                                            <td>{O.ime}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Srednje ime</td>\n                                            <td>{O.srednjeIme}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Krsno ime</td>\n                                            <td>{O.krsnoIme}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Prezime</td>\n                                            <td>{O.prezime}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Nadimak</td>\n                                            <td>{O.nadimak}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Spol</td>\n                                            <td>{O.spol}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Mjesto</td>\n                                            <td>{O.mjesto}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Županija</td>\n                                            <td>{O.zupanija}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Ulica</td>\n                                            <td>{O.ulica}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Kućni broj</td>\n                                            <td>{O.kucniBroj}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Mobitel</td>\n                                            <td>{O.mobitel}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Telefon</td>\n                                            <td>{O.telefon}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Datum rođenja</td>\n                                            <td>{O.datumRodenja}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Dob</td>\n                                            <td>{O.dob}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>E-mail</td>\n                                            <td>{O.email}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Škola</td>\n                                            <td>{O.skola}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Struka</td>\n                                            <td>{O.struka}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Fakultet</td>\n                                            <td>{O.fakultet}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Studiji</td>\n                                            <td>{O.studiji}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                                <div className=\"controls\">\n                                    <Button float=\"left\" text=\"Nazad\" className=\"success back\" onClick={() => { this.props.history.go(-1) }} />\n                                    <Button float=\"left\" text=\"Generiraj\" className=\"warning generate\" onClick={this.getUser} />\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\n\n\nexport default RandomPersonGenerator;\n\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\n\nimport Home from './pages/Home'\nimport RandomPersonGenerator from './pages/RandomPersonGenerator'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header>\n            <h1>Ivan Magaš</h1>\n          </header>\n\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/RandomPersonGenerator\" render={({ history }) => <RandomPersonGenerator history={history} />} />\n          <footer>\n            <h5><a className=\"App-link\" href=\"mailto:imagas96@gmail.com\">imagas96@gmail.com</a></h5>\n          </footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}